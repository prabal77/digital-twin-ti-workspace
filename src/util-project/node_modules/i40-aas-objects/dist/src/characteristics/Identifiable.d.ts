import { Reference } from '../baseClasses/Reference';
import { Referable, TReferableJSON, IReferable } from './Referable';
import { IIdentifier } from '../baseClasses//Identifier';
import { IAdministrativeInformation } from '../baseClasses/AdministrativeInformation';
import { ILangString } from '../baseClasses/LangString';
import { IModelType } from '../baseClasses/ModelType';
interface IIdentifiable extends IReferable {
    identification: IIdentifier;
    administration?: IAdministrativeInformation;
}
declare type TIdentifiableJSON = TReferableJSON & {
    identification: IIdentifier;
    administration?: IAdministrativeInformation;
};
declare abstract class Identifiable extends Referable implements IIdentifiable {
    getReference(): Reference;
    identification: IIdentifier;
    administration?: IAdministrativeInformation;
    constructor(identification: IIdentifier, idShort: string, modelType: IModelType, administration?: IAdministrativeInformation, description?: Array<ILangString>, category?: string, parent?: Reference);
    toJSON(): TIdentifiableJSON;
    checkRules(): void;
}
export { Identifiable, TIdentifiableJSON };
