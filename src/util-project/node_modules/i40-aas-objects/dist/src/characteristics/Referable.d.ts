import { Reference, IReference } from '../baseClasses/Reference';
import { IHasModelType } from './HasModelType';
import { IModelType } from '../baseClasses/ModelType';
import { ILangString } from '../baseClasses/LangString';
import { TReferablesTypesJSON } from '../types/ReferableTypes';
interface IReferable extends IHasModelType {
    idShort: string;
    parent?: IReference;
    category?: string;
    description?: Array<ILangString>;
}
declare type TReferableJSON = {
    modelType?: IModelType;
    idShort: string;
    parent?: IReference;
    category?: string;
    description?: Array<ILangString>;
};
declare abstract class Referable implements IReferable {
    modelType: IModelType;
    idShort: string;
    parent?: Reference;
    category?: string;
    description: Array<ILangString>;
    constructor(idShort: string, modelType: IModelType, description?: Array<ILangString>, category?: string, parent?: IReference);
    getReference(): Reference;
    toJSON(): TReferablesTypesJSON;
    checkRules(): void;
}
export { Referable, IReferable, TReferableJSON };
