import { KindEnum } from '../types/KindEnum';
import { IReference, Reference } from '../baseClasses/Reference';
import { IEmbeddedDataSpecification } from '../baseClasses/EmbeddedDataSpecification';
import { IModelType } from '../baseClasses/ModelType';
import { ILangString } from '../baseClasses/LangString';
import { IConstraint } from '../baseClasses/Constraint';
import { Referable } from '../characteristics/Referable';
import { IHasKind } from '../characteristics/HasKind';
import { IHasSemantics } from '../characteristics/HasSemantics';
import { IQualifiable } from '../characteristics/Qualifiable';
import { IHasDataSpecification } from '../characteristics/HasDataSpecification';
import { TSubmodelElementsJSON } from '../types/SubmodelElementTypes';
interface ISubmodelElement {
    kind?: KindEnum;
    semanticId?: IReference;
    embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>;
    modelType: IModelType;
    idShort: string;
    parent?: Reference;
    category?: string;
    description?: Array<ILangString>;
    qualifiers?: Array<IConstraint>;
}
declare type TSubmodelElementJSON = {
    kind?: KindEnum;
    semanticId?: IReference;
    embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>;
    modelType?: IModelType;
    idShort: string;
    parent?: IReference;
    category?: string;
    description?: Array<ILangString>;
    qualifiers?: Array<IConstraint>;
};
declare abstract class SubmodelElement extends Referable implements ISubmodelElement, IHasKind, IHasSemantics, IQualifiable, IHasDataSpecification {
    qualifiers?: Array<IConstraint>;
    kind: KindEnum;
    semanticId: IReference;
    embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>;
    constructor(idShort: string, modelType: IModelType, semanticId?: IReference, kind?: KindEnum, embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>, qualifiers?: Array<IConstraint>, description?: Array<ILangString>, category?: string, parent?: IReference);
    setSemanticId(semanticId: IReference): this;
    toJSON(): TSubmodelElementsJSON;
    checkRules(): void;
}
export { SubmodelElement, ISubmodelElement, TSubmodelElementJSON };
