import { KindEnum } from '../types/KindEnum';
import { IReference } from '../baseClasses/Reference';
import { IEmbeddedDataSpecification } from '../baseClasses/EmbeddedDataSpecification';
import { IModelType } from '../baseClasses/ModelType';
import { ILangString } from '../baseClasses/LangString';
import { IConstraint } from '../baseClasses/Constraint';
import { TSubmodelElements } from '../types/SubmodelElementTypes';
import { ISubmodelElement, SubmodelElement } from './SubmodelElement';
interface ISubmodelElementCollection extends ISubmodelElement {
    value?: Array<TSubmodelElements>;
    ordered?: boolean;
    allowDuplicates?: boolean;
}
declare type TSubmodelElementCollectionJSON = {
    kind?: KindEnum;
    semanticId: IReference;
    embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>;
    modelType?: IModelType;
    idShort: string;
    parent?: IReference;
    category?: string;
    description?: Array<ILangString>;
    value?: Array<TSubmodelElements>;
    ordered?: boolean;
    allowDuplicates?: boolean;
    qualifiers?: Array<IConstraint>;
};
declare class SubmodelElementCollection extends SubmodelElement implements ISubmodelElementCollection {
    value: Array<TSubmodelElements>;
    ordered: boolean;
    allowDuplicates: boolean;
    static fromJSON(obj: TSubmodelElementCollectionJSON): SubmodelElementCollection;
    constructor(idShort: string, value?: Array<TSubmodelElements>, ordered?: boolean, allowDuplicates?: boolean, semanticId?: IReference, kind?: KindEnum, embeddedDataSpecifications?: Array<IEmbeddedDataSpecification>, qualifiers?: Array<IConstraint>, description?: Array<ILangString>, category?: string, parent?: IReference);
    getValue(): TSubmodelElements[];
    setValue(values: Array<TSubmodelElements>): this;
    addValue(submodelElement: TSubmodelElements): this;
    getValueByIdShort(idShort: string): TSubmodelElements;
    toJSON(): {
        idShort: string;
        parent: import("../baseClasses/Reference").Reference | undefined;
        category: string | undefined;
        description: ILangString[];
        kind: KindEnum;
        modelType: IModelType;
        semanticId: IReference;
        embeddedDataSpecifications: IEmbeddedDataSpecification[] | undefined;
        value: TSubmodelElements[];
        ordered: boolean;
        allowDuplicates: boolean;
    };
}
export { SubmodelElementCollection, TSubmodelElementCollectionJSON, ISubmodelElementCollection };
