"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = void 0;
const index_1 = require("../index");
var run = function () {
    /* Create a Submodel and add a new Property to it*/
    var myAssetIdentificationModel = index_1.Submodel.fromJSON({
        identification: { id: 'http://test.com/submodel/id/identification123', idType: "IRDI" /* IRDI */ },
        idShort: 'identification123',
    }).addSubmodelElement(new index_1.Property('ManufacturerName', index_1.AnyAtomicTypeEnum.string, 'SAP SE', undefined, new index_1.Reference({
        keys: [
            {
                local: false,
                type: index_1.KeyElementsEnum.GlobalReference,
                idType: "IRDI" /* IRDI */,
                value: '0173-1#02-AAO677#002',
            },
        ],
    })));
    /* Create an asset and add a reference to the previously created submodel as it assetIdentificationModel*/
    var myAsset = new index_1.Asset({ id: 'http://test.com/asset/123', idType: "IRDI" /* IRDI */ }, '123').setAssetIdentificationModel(myAssetIdentificationModel.getReference());
    /* Create an AAS and add a reference to the previously created asset as its asset*/
    var myAas = new index_1.AssetAdministrationShell({ id: 'http://test.com/aas/id/aas123', idType: "IRDI" /* IRDI */ }, 'identification123').setAsset(myAsset.getReference());
    /* Create an environment and add all identifiables */
    var myNewAasEnv = new index_1.AssetAdministrationShellEnv()
        .addAssetAdministrationShell(myAas)
        .addAsset(myAsset)
        .addSubmodel(myAssetIdentificationModel);
    /* print the environment to the console */
    console.log(JSON.stringify(myNewAasEnv, null, 3));
};
exports.run = run;
//# sourceMappingURL=basicAas.js.map